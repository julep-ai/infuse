[tool.poetry]
name = "integrations"
version = "0.1.0"
description = "Integration service for various AI tools"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
langchain-community = "^0.3.0"
fastapi = "^0.115.0"
uvicorn = "^0.30.6"
langchain = "^0.3.0"
pydantic = {extras = ["email"], version = "^2.9.2"}
duckduckgo-search = "^6.2.13"
openai = "^1.47.1"
tweepy = "^4.14.0"
wikipedia = "^1.4.0"
fire = "^0.6.0"
pyowm = "^3.3.0"
spider-client = "^0.0.70"
browserbase = "^0.3.0"
setuptools = "^75.1.0"
beartype = "^0.19.0"
tenacity = ">=8.2.0,<8.4.0"
gunicorn = "^23.0.0"
uvloop = "^0.21.0"
selenium = "^4.25.0"
playwright = "^1.48.0"
httpx = "^0.27.2"
pillow = "^11.0.0"
llama-index = "^0.11.22"
llama-parse = "^0.5.13"
cloudinary = "^1.41.0"
environs = "^11.2.1"

[tool.poe.tasks]
format = "ruff format"
lint = "ruff check --select I --fix --unsafe-fixes integrations/**/*.py"
typecheck = "pytype --config pytype.toml"
check = [
    "lint",
    "format",
    "typecheck",
]
test = "pytest"
codegen = """
datamodel-codegen \
  --input ../openapi.yaml \
  --input-file-type openapi \
  --output integrations/autogen/ \
  --output-model-type pydantic_v2.BaseModel \
  --strict-types bool \
  --strict-nullable \
  --allow-population-by-field-name \
  --field-include-all-keys \
  --reuse-model \
  --snake-case-field \
  --enum-field-as-literal all \
  --field-constraints \
  --use-operation-id-as-name \
  --use-schema-description \
  --use-field-description \
  --use-annotated \
  --use-default \
  --use-unique-items-as-set \
  --use-subclass-enum \
  --use-union-operator \
  --use-one-literal-as-default \
  --use-double-quotes \
  --use-exact-imports \
  --use-standard-collections \
  --use-non-positive-negative-number-constrained-types \
  --target-python-version 3.12 \
  --treat-dot-as-module \
  --use-title-as-name \
  --collapse-root-models \
  --output-datetime-class AwareDatetime \
  --openapi-scopes schemas \
  --keep-model-order \
  --disable-timestamp"""


[tool.poetry.group.dev.dependencies]
poethepoet = "^0.25.1"
datamodel-code-generator = "^0.26.2"
pytest = "^8.3.3"
pytype = "^2024.9.13"
ruff = "^0.6.8"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.24.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
