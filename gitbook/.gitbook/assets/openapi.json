{
  "openapi": "3.0.3",
  "info": {
    "title": "Julep Agents API",
    "description": "This is a sample description about this spec.",
    "termsOfService": "",
    "contact": {
      "email": ""
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about spec",
    "url": ""
  },
  "servers": [
    {
      "url": "https://api.julep.ai",
      "description": "",
      "varibles": {}
    }
  ],
  "tags": [
    {
      "name": "Default",
      "description": ""
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "summary": "Create a new session",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "get": {
        "summary": "List sessions",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "get": {
        "summary": "List users",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      }
    },
    "/agents": {
      "post": {
        "summary": "Create a new agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "get": {
        "summary": "List agents",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "summary": "Get details of the session",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "delete": {
        "summary": "Delete session",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "put": {
        "summary": "Update session parameters",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "session_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Get details of the user",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "delete": {
        "summary": "Delete user",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "put": {
        "summary": "Update user parameters",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "user_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/agents/{agent_id}": {
      "get": {
        "summary": "Get details of the agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "delete": {
        "summary": "Delete agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "put": {
        "summary": "Update agent parameters",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "agent_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/sessions/{session_id}/suggestions": {
      "get": {
        "summary": "Get autogenerated suggestions for session user and agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "session_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/sessions/{session_id}/messages": {
      "get": {
        "summary": "Get all messages in a session",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "session_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/sessions/{session_id}/chat": {
      "parameters": [
        {
          "in": "path",
          "name": "session_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "summary": "Interact with the session",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      }
    },
    "/agents/{agent_id}/memories": {
      "get": {
        "summary": "Get memories of the agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "agent_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    },
    "/agents/{agent_id}/events": {
      "get": {
        "summary": "Get memories of the agent",
        "description": "",
        "operationId": "",
        "tags": [],
        "parameters": [],
        "requestBody": {},
        "responses": {}
      },
      "parameters": [
        {
          "in": "path",
          "name": "agent_id",
          "description": "",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ]
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "http1": {
        "type": "apiKey",
        "scheme": "basic",
        "description": "API Key Authentication",
        "name": "Julep API Key",
        "in": "header"
      }
    },
    "parameters": {
      "session_id": {
        "in": "path",
        "required": false,
        "description": "",
        "schema": {
          "type": "string"
        }
      },
      "user_id": {
        "in": "path",
        "required": false,
        "description": "",
        "schema": {
          "type": "string"
        }
      },
      "agent_id": {
        "in": "path",
        "required": false,
        "description": "",
        "schema": {
          "type": "string"
        }
      },
      "message_id": {
        "in": "path",
        "required": false,
        "description": "",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "http1": []
    }
  ]
}