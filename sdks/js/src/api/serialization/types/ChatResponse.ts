/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as JulepApi from "../../api";
import * as core from "../../core";

export const ChatResponse: core.serialization.ObjectSchema<serializers.ChatResponse.Raw, JulepApi.ChatResponse> =
    core.serialization.object({
        id: core.serialization.string(),
        finishReason: core.serialization.property(
            "finish_reason",
            core.serialization.lazy(async () => (await import("..")).ChatResponseFinishReason)
        ),
        response: core.serialization.list(
            core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).ChatMlMessage))
        ),
        usage: core.serialization.lazyObject(async () => (await import("..")).CompletionUsage),
    });

export declare namespace ChatResponse {
    interface Raw {
        id: string;
        finish_reason: serializers.ChatResponseFinishReason.Raw;
        response: serializers.ChatMlMessage.Raw[][];
        usage: serializers.CompletionUsage.Raw;
    }
}
