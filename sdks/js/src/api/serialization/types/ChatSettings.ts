/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as JulepApi from "../../api";
import * as core from "../../core";

export const ChatSettings: core.serialization.ObjectSchema<serializers.ChatSettings.Raw, JulepApi.ChatSettings> =
    core.serialization.object({
        frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
        lengthPenalty: core.serialization.property("length_penalty", core.serialization.number().optional()),
        logitBias: core.serialization.property(
            "logit_bias",
            core.serialization.record(core.serialization.string(), core.serialization.number().optional()).optional()
        ),
        maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
        presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
        repetitionPenalty: core.serialization.property("repetition_penalty", core.serialization.number().optional()),
        responseFormat: core.serialization.property(
            "response_format",
            core.serialization.lazyObject(async () => (await import("..")).ChatSettingsResponseFormat).optional()
        ),
        seed: core.serialization.number().optional(),
        stop: core.serialization.lazy(async () => (await import("..")).ChatSettingsStop).optional(),
        stream: core.serialization.boolean().optional(),
        temperature: core.serialization.number().optional(),
        topP: core.serialization.property("top_p", core.serialization.number().optional()),
    });

export declare namespace ChatSettings {
    interface Raw {
        frequency_penalty?: number | null;
        length_penalty?: number | null;
        logit_bias?: Record<string, number | null | undefined> | null;
        max_tokens?: number | null;
        presence_penalty?: number | null;
        repetition_penalty?: number | null;
        response_format?: serializers.ChatSettingsResponseFormat.Raw | null;
        seed?: number | null;
        stop?: serializers.ChatSettingsStop.Raw | null;
        stream?: boolean | null;
        temperature?: number | null;
        top_p?: number | null;
    }
}
