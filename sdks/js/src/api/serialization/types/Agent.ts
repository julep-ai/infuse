/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as JulepApi from "../../api";
import * as core from "../../core";

export const Agent: core.serialization.ObjectSchema<serializers.Agent.Raw, JulepApi.Agent> = core.serialization.object({
    name: core.serialization.string(),
    about: core.serialization.string(),
    instructions: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).Instruction))
        .optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
    id: core.serialization.string(),
    defaultSettings: core.serialization.property(
        "default_settings",
        core.serialization.lazyObject(async () => (await import("..")).AgentDefaultSettings).optional()
    ),
    model: core.serialization.string(),
});

export declare namespace Agent {
    interface Raw {
        name: string;
        about: string;
        instructions?: serializers.Instruction.Raw[] | null;
        created_at?: string | null;
        updated_at?: string | null;
        id: string;
        default_settings?: serializers.AgentDefaultSettings.Raw | null;
        model: string;
    }
}
