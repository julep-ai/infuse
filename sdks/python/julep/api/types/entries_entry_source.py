# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EntriesEntrySource(str, enum.Enum):
    API_REQUEST = "api_request"
    API_RESPONSE = "api_response"
    TOOL_RESPONSE = "tool_response"
    INTERNAL = "internal"
    SUMMARIZER = "summarizer"
    META = "meta"

    def visit(
        self,
        api_request: typing.Callable[[], T_Result],
        api_response: typing.Callable[[], T_Result],
        tool_response: typing.Callable[[], T_Result],
        internal: typing.Callable[[], T_Result],
        summarizer: typing.Callable[[], T_Result],
        meta: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EntriesEntrySource.API_REQUEST:
            return api_request()
        if self is EntriesEntrySource.API_RESPONSE:
            return api_response()
        if self is EntriesEntrySource.TOOL_RESPONSE:
            return tool_response()
        if self is EntriesEntrySource.INTERNAL:
            return internal()
        if self is EntriesEntrySource.SUMMARIZER:
            return summarizer()
        if self is EntriesEntrySource.META:
            return meta()
