# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ExecutionsTransitionType(str, enum.Enum):
    FINISH = "finish"
    WAIT = "wait"
    ERROR = "error"
    STEP = "step"
    CANCELLED = "cancelled"

    def visit(
        self,
        finish: typing.Callable[[], T_Result],
        wait: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
        step: typing.Callable[[], T_Result],
        cancelled: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ExecutionsTransitionType.FINISH:
            return finish()
        if self is ExecutionsTransitionType.WAIT:
            return wait()
        if self is ExecutionsTransitionType.ERROR:
            return error()
        if self is ExecutionsTransitionType.STEP:
            return step()
        if self is ExecutionsTransitionType.CANCELLED:
            return cancelled()
