# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .entries_base_entry_content import EntriesBaseEntryContent
from .entries_base_entry_source import EntriesBaseEntrySource
from .entries_chat_ml_role import EntriesChatMlRole


class EntriesBaseEntry(pydantic_v1.BaseModel):
    role: EntriesChatMlRole
    name: typing.Optional[str] = None
    content: EntriesBaseEntryContent
    source: EntriesBaseEntrySource
    tokenizer: typing.Optional[str] = None
    token_count: typing.Optional[int] = None
    timestamp: float = pydantic_v1.Field()
    """
    This is the time that this event refers to.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        kwargs_with_defaults_exclude_none: typing.Any = {
            "by_alias": True,
            "exclude_none": True,
            **kwargs,
        }

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset),
            super().dict(**kwargs_with_defaults_exclude_none),
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
