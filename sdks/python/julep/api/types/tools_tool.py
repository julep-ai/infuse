# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import typing_extensions

from ..core.datetime_utils import serialize_datetime
from .common_identifier_safe_unicode import CommonIdentifierSafeUnicode
from .common_uuid import CommonUuid
from .common_valid_python_identifier import CommonValidPythonIdentifier
from .tools_function_def import ToolsFunctionDef
from .tools_function_tool import ToolsFunctionTool

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Base(pydantic.BaseModel):
    background: bool = pydantic.Field(
        description="The tool should be run in the background (not supported at the moment)"
    )
    interactive: bool = pydantic.Field(
        description='Whether the tool that can be run interactively (response should contain "stop" boolean field)'
    )
    function: typing.Optional[ToolsFunctionDef]
    integration: typing.Any
    system: typing.Any
    api_call: typing.Any
    created_at: dt.datetime = pydantic.Field(
        description="When this resource was created as UTC date-time"
    )
    updated_at: dt.datetime = pydantic.Field(
        description="When this resource was updated as UTC date-time"
    )
    id: CommonUuid

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}


class ToolsTool_Function(ToolsFunctionTool, Base):
    type: typing_extensions.Literal["function"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


ToolsTool = typing.Union[ToolsTool_Function]
