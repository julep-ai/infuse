# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import typing_extensions

from .tasks_error_workflow_step import TasksErrorWorkflowStep
from .tasks_evaluate_step import TasksEvaluateStep
from .tasks_prompt_step import TasksPromptStep
from .tasks_tool_call_step import TasksToolCallStep
from .tasks_yield_step import TasksYieldStep


class TasksWorkflowStep_ToolCall(TasksToolCallStep):
    kind: typing_extensions.Literal["tool_call"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class TasksWorkflowStep_Yield(TasksYieldStep):
    kind: typing_extensions.Literal["yield"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class TasksWorkflowStep_Prompt(TasksPromptStep):
    kind: typing_extensions.Literal["prompt"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class TasksWorkflowStep_Evaluate(TasksEvaluateStep):
    kind: typing_extensions.Literal["evaluate"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class TasksWorkflowStep_IfElse(TasksIfElseWorkflowStep):
    kind: typing_extensions.Literal["if_else"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


class TasksWorkflowStep_Error(TasksErrorWorkflowStep):
    kind: typing_extensions.Literal["error"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


TasksWorkflowStep = typing.Union[
    TasksWorkflowStep_ToolCall,
    TasksWorkflowStep_Yield,
    TasksWorkflowStep_Prompt,
    TasksWorkflowStep_Evaluate,
    TasksWorkflowStep_IfElse,
    TasksWorkflowStep_Error,
]
from .tasks_if_else_workflow_step import TasksIfElseWorkflowStep  # noqa: E402

TasksWorkflowStep_IfElse.update_forward_refs(
    TasksIfElseWorkflowStep=TasksIfElseWorkflowStep, TasksWorkflowStep=TasksWorkflowStep
)
