# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .common_uuid import CommonUuid
from .tasks_workflow_step import TasksWorkflowStep
from .tools_create_tool_request import ToolsCreateToolRequest

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class TasksTask(pydantic.BaseModel):
    """
    Object describing a Task
    """

    name: str
    description: str
    main: typing.List[TasksWorkflowStep] = pydantic.Field(
        description="The entrypoint of the task."
    )
    input_schema: typing.Optional[typing.Dict[str, typing.Any]] = pydantic.Field(
        description="The schema for the input to the task. `null` means all inputs are valid."
    )
    tools: typing.List[ToolsCreateToolRequest] = pydantic.Field(
        description="Tools defined specifically for this task not included in the Agent itself."
    )
    inherit_tools: bool = pydantic.Field(
        description="Whether to inherit tools from the parent agent or not. Defaults to true."
    )
    agent_id: CommonUuid
    id: CommonUuid
    created_at: dt.datetime = pydantic.Field(
        description="When this resource was created as UTC date-time"
    )
    updated_at: dt.datetime = pydantic.Field(
        description="When this resource was updated as UTC date-time"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
