# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import typing_extensions

from ..core.datetime_utils import serialize_datetime
from .entries_chat_ml_image_content_part import EntriesChatMlImageContentPart
from .entries_image_detail import EntriesImageDetail
from .entries_image_url import EntriesImageUrl

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Base(pydantic.BaseModel):
    text: typing.Optional[str]
    image_url: typing.Optional[EntriesImageUrl]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}


class EntriesBaseChatMlContentPart_ImageUrl(EntriesChatMlImageContentPart, Base):
    type: typing_extensions.Literal["image_url"]

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True


EntriesBaseChatMlContentPart = typing.Union[EntriesBaseChatMlContentPart_ImageUrl]
