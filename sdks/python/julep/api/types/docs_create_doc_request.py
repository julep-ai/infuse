# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .common_identifier_safe_unicode import CommonIdentifierSafeUnicode
from .docs_create_doc_request_content import DocsCreateDocRequestContent


class DocsCreateDocRequest(pydantic_v1.BaseModel):
    """
    Payload for creating a doc
    """

    metadata: typing.Optional[typing.Dict[str, typing.Any]] = None
    title: CommonIdentifierSafeUnicode = pydantic_v1.Field()
    """
    Title describing what this document contains
    """

    content: DocsCreateDocRequestContent = pydantic_v1.Field()
    """
    Contents of the document
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        kwargs_with_defaults_exclude_none: typing.Any = {
            "by_alias": True,
            "exclude_none": True,
            **kwargs,
        }

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset),
            super().dict(**kwargs_with_defaults_exclude_none),
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
