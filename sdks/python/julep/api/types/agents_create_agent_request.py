# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .agents_create_agent_request_default_settings import (
    AgentsCreateAgentRequestDefaultSettings,
)
from .agents_create_agent_request_instructions import (
    AgentsCreateAgentRequestInstructions,
)
from .common_identifier_safe_unicode import CommonIdentifierSafeUnicode

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class AgentsCreateAgentRequest(pydantic.BaseModel):
    """
    Payload for creating a agent (and associated documents)
    """

    metadata: typing.Optional[typing.Dict[str, typing.Any]]
    name: CommonIdentifierSafeUnicode = pydantic.Field(description="Name of the agent")
    about: str = pydantic.Field(description="About the agent")
    model: str = pydantic.Field(
        description="Model name to use (gpt-4-turbo, gemini-nano etc)"
    )
    instructions: AgentsCreateAgentRequestInstructions = pydantic.Field(
        description="Instructions for the agent"
    )
    default_settings: typing.Optional[AgentsCreateAgentRequestDefaultSettings] = (
        pydantic.Field(
            description="Default settings for all sessions created by this agent"
        )
    )
    docs: typing.List[typing.Any] = pydantic.Field(
        description="Documents to index for this agent. (Max: 100 items)"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {
            "by_alias": True,
            "exclude_unset": True,
            **kwargs,
        }
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
