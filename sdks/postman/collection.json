{
  "info": {
    "name": "Julep API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": null
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api-alpha.julep.ai/api",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{apiKey}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "Authorization",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "_type": "endpoint",
      "name": "Agents Route List",
      "request": {
        "description": "List Agents (paginated)",
        "url": {
          "raw": "{{baseUrl}}/agents?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List Agents (paginated)",
            "url": {
              "raw": "{{baseUrl}}/agents?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"id\": \"id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"updated_at\": \"2024-01-15T09:30:00Z\",\n            \"name\": \"name\",\n            \"about\": \"about\",\n            \"model\": \"model\",\n            \"instructions\": \"instructions\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Create",
      "request": {
        "description": "Create a new Agent",
        "url": {
          "raw": "{{baseUrl}}/agents",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\",\n    \"docs\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create a new Agent",
            "url": {
              "raw": "{{baseUrl}}/agents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\",\n    \"docs\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Create Or Update",
      "request": {
        "description": "Create or update an Agent",
        "url": {
          "raw": "{{baseUrl}}/agents",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create or update an Agent",
            "url": {
              "raw": "{{baseUrl}}/agents",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Get",
      "request": {
        "description": "Get an Agent by id",
        "url": {
          "raw": "{{baseUrl}}/agents/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get an Agent by id",
            "url": {
              "raw": "{{baseUrl}}/agents/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"metadata\": {\n        \"metadata\": {\n            \"key\": \"value\"\n        }\n    },\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\",\n    \"default_settings\": {\n        \"preset\": \"problem_solving\"\n    }\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Update",
      "request": {
        "description": "Update an existing Agent by id (overwrites existing values; use PATCH for merging instead)",
        "url": {
          "raw": "{{baseUrl}}/agents/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing Agent by id (overwrites existing values; use PATCH for merging instead)",
            "url": {
              "raw": "{{baseUrl}}/agents/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Delete",
      "request": {
        "description": "Delete Agent by id",
        "url": {
          "raw": "{{baseUrl}}/agents/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete Agent by id",
            "url": {
              "raw": "{{baseUrl}}/agents/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Route Patch",
      "request": {
        "description": "Update an existing Agent by id (merges with existing values)",
        "url": {
          "raw": "{{baseUrl}}/agents/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing Agent by id (merges with existing values)",
            "url": {
              "raw": "{{baseUrl}}/agents/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agent Docs Route List",
      "request": {
        "description": "List Docs owned by an Agent",
        "url": {
          "raw": "{{baseUrl}}/agents/:id/docs?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id",
            "docs"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List Docs owned by an Agent",
            "url": {
              "raw": "{{baseUrl}}/agents/:id/docs?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id",
                "docs"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"id\": \"id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"title\": \"title\",\n            \"content\": \"content\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agents Docs Search Route Search",
      "request": {
        "description": "Search Docs owned by an Agent",
        "url": {
          "raw": "{{baseUrl}}/agents/:id/search?limit=&offset=&sort_by=&direction=&metadata_filter=",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id",
            "search"
          ],
          "query": [
            {
              "key": "limit",
              "value": "",
              "description": "Limit the number of items returned"
            },
            {
              "key": "offset",
              "value": "",
              "description": "Offset the items returned"
            },
            {
              "key": "sort_by",
              "value": "",
              "description": "Sort by a field"
            },
            {
              "key": "direction",
              "value": "",
              "description": "Sort direction"
            },
            {
              "key": "metadata_filter",
              "value": "",
              "description": "JSON string of object that should be used to filter objects by metadata"
            }
          ],
          "variable": [
            {
              "key": "id",
              "value": "",
              "description": "ID of the parent"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"body\": {\n        \"mode\": \"vector\",\n        \"vector\": [\n            0\n        ]\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": []
    },
    {
      "_type": "endpoint",
      "name": "Agent Tools Route List",
      "request": {
        "description": "List tools of the given agent",
        "url": {
          "raw": "{{baseUrl}}/agents/:id/tools?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id",
            "tools"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List tools of the given agent",
            "url": {
              "raw": "{{baseUrl}}/agents/:id/tools?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id",
                "tools"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": []\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Agent Tools Route Create",
      "request": {
        "description": "Create a new tool for this agent",
        "url": {
          "raw": "{{baseUrl}}/agents/:id/tools",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "agents",
            ":id",
            "tools"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\",\n    \"docs\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create a new tool for this agent",
            "url": {
              "raw": "{{baseUrl}}/agents/:id/tools",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "agents",
                ":id",
                "tools"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"model\": \"model\",\n    \"instructions\": \"instructions\",\n    \"docs\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Individual Docs Route Get",
      "request": {
        "description": "Get Doc by id",
        "url": {
          "raw": "{{baseUrl}}/docs/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "docs",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get Doc by id",
            "url": {
              "raw": "{{baseUrl}}/docs/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "docs",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"metadata\": {\n        \"metadata\": {\n            \"key\": \"value\"\n        }\n    },\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"title\": \"title\",\n    \"content\": \"content\"\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Individual Docs Route Delete",
      "request": {
        "description": "Delete an existing Doc by id",
        "url": {
          "raw": "{{baseUrl}}/docs/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "docs",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete an existing Doc by id",
            "url": {
              "raw": "{{baseUrl}}/docs/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "docs",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Embed Route Embed",
      "request": {
        "description": "Embed a query for search",
        "url": {
          "raw": "{{baseUrl}}/embed",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "embed"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"body\": {\n        \"text\": \"text\"\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Embed a query for search",
            "url": {
              "raw": "{{baseUrl}}/embed",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "embed"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"body\": {\n        \"text\": \"text\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"vectors\": [\n        [\n            1.1\n        ]\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Executions Route Get",
      "request": {
        "description": "Get an Execution by id",
        "url": {
          "raw": "{{baseUrl}}/executions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "executions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get an Execution by id",
            "url": {
              "raw": "{{baseUrl}}/executions/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "executions",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"task_id\": \"task_id\",\n    \"status\": \"queued\",\n    \"input\": {\n        \"input\": {\n            \"key\": \"value\"\n        }\n    },\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"metadata\": {\n        \"metadata\": {\n            \"key\": \"value\"\n        }\n    },\n    \"id\": \"id\"\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Executions Route Update",
      "request": {
        "description": "Update an existing Execution",
        "url": {
          "raw": "{{baseUrl}}/executions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "executions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "",
              "description": "ID of the resource"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"status\": \"cancelled\",\n    \"reason\": \"example\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": []
    },
    {
      "_type": "endpoint",
      "name": "Execution Transitions Route List",
      "request": {
        "description": "List the Transitions of an Execution by id",
        "url": {
          "raw": "{{baseUrl}}/executions/:id/transitions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "executions",
            ":id",
            "transitions"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List the Transitions of an Execution by id",
            "url": {
              "raw": "{{baseUrl}}/executions/:id/transitions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "executions",
                ":id",
                "transitions"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"transitions\": [\n                {\n                    \"type\": \"finish\",\n                    \"execution_id\": \"execution_id\",\n                    \"outputs\": {},\n                    \"current\": [],\n                    \"id\": \"id\",\n                    \"created_at\": \"2024-01-15T09:30:00Z\",\n                    \"updated_at\": \"2024-01-15T09:30:00Z\"\n                }\n            ]\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Job Route Get",
      "request": {
        "description": "Get the status of an existing Job by its id",
        "url": {
          "raw": "{{baseUrl}}/jobs/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "jobs",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get the status of an existing Job by its id",
            "url": {
              "raw": "{{baseUrl}}/jobs/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"name\": \"name\",\n    \"reason\": \"reason\",\n    \"has_progress\": true,\n    \"progress\": 1.1,\n    \"state\": \"pending\"\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route List",
      "request": {
        "description": "List sessions (paginated)",
        "url": {
          "raw": "{{baseUrl}}/sessions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List sessions (paginated)",
            "url": {
              "raw": "{{baseUrl}}/sessions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": []\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Create",
      "request": {
        "description": "Create a new session",
        "url": {
          "raw": "{{baseUrl}}/sessions",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create a new session",
            "url": {
              "raw": "{{baseUrl}}/sessions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Create Or Update",
      "request": {
        "description": "Create or update a session",
        "url": {
          "raw": "{{baseUrl}}/sessions",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"id\",\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create or update a session",
            "url": {
              "raw": "{{baseUrl}}/sessions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"id\",\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Get",
      "request": {
        "description": "Get a session by id",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "value": "",
              "description": "ID of the resource"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": []
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Update",
      "request": {
        "description": "Update an existing session by its id (overwrites all existing values)",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing session by its id (overwrites all existing values)",
            "url": {
              "raw": "{{baseUrl}}/sessions/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"situation\": \"situation\",\n    \"render_templates\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Delete",
      "request": {
        "description": "Delete a session by its id",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete a session by its id",
            "url": {
              "raw": "{{baseUrl}}/sessions/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Sessions Route Patch",
      "request": {
        "description": "Update an existing session by its id (merges with existing values)",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing session by its id (merges with existing values)",
            "url": {
              "raw": "{{baseUrl}}/sessions/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "History Route List",
      "request": {
        "description": "Get history of a Session (paginated)",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id/history?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id",
            "history"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get history of a Session (paginated)",
            "url": {
              "raw": "{{baseUrl}}/sessions/:id/history?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":id",
                "history"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"entries\": [\n                {\n                    \"role\": \"user\",\n                    \"content\": [],\n                    \"source\": \"api_request\",\n                    \"timestamp\": 1,\n                    \"created_at\": \"2024-01-15T09:30:00Z\",\n                    \"id\": \"id\"\n                }\n            ],\n            \"relations\": [\n                {\n                    \"head\": \"head\",\n                    \"relation\": \"relation\",\n                    \"tail\": \"tail\"\n                }\n            ],\n            \"session_id\": \"session_id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "History Route Delete",
      "request": {
        "description": "Clear the history of a Session (resets the Session)",
        "url": {
          "raw": "{{baseUrl}}/sessions/:id/history",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "sessions",
            ":id",
            "history"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Clear the history of a Session (resets the Session)",
            "url": {
              "raw": "{{baseUrl}}/sessions/:id/history",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":id",
                "history"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route List",
      "request": {
        "description": "List tasks (paginated)",
        "url": {
          "raw": "{{baseUrl}}/tasks?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List tasks (paginated)",
            "url": {
              "raw": "{{baseUrl}}/tasks?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"name\": \"name\",\n            \"description\": \"description\",\n            \"main\": [],\n            \"tools\": [\n                {\n                    \"type\": \"function\",\n                    \"background\": true\n                }\n            ],\n            \"inherit_tools\": true,\n            \"agent_id\": \"agent_id\",\n            \"id\": \"id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"updated_at\": \"2024-01-15T09:30:00Z\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route Create",
      "request": {
        "description": "Create a new task",
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create a new task",
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route Create Or Update",
      "request": {
        "description": "Create or update a task",
        "url": {
          "raw": "{{baseUrl}}/tasks",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create or update a task",
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route Update",
      "request": {
        "description": "Update an existing task (overwrite existing values)",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing task (overwrite existing values)",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"description\",\n    \"main\": [],\n    \"tools\": [\n        {\n            \"type\": \"function\",\n            \"background\": true\n        }\n    ],\n    \"inherit_tools\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route Delete",
      "request": {
        "description": "Delete a task by its id",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete a task by its id",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tasks Route Patch",
      "request": {
        "description": "Update an existing task (merges with existing values)",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing task (merges with existing values)",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Task Executions Route List",
      "request": {
        "description": "List executions of the given task",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id/executions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id",
            "executions"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List executions of the given task",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id/executions?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id",
                "executions"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"task_id\": \"task_id\",\n            \"status\": \"queued\",\n            \"input\": {},\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"updated_at\": \"2024-01-15T09:30:00Z\",\n            \"id\": \"id\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Task Executions Route Create",
      "request": {
        "description": "Create an execution for the given task",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id/executions",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id",
            "executions"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"input\": {}\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create an execution for the given task",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id/executions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id",
                "executions"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"input\": {}\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Task Executions Route Resume With Task Token",
      "request": {
        "description": "Resume an execution with a task token",
        "url": {
          "raw": "{{baseUrl}}/tasks/:id/executions",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tasks",
            ":id",
            "executions"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent Task",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"status\": \"running\",\n    \"task_token\": \"task_token\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Resume an execution with a task token",
            "url": {
              "raw": "{{baseUrl}}/tasks/:id/executions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tasks",
                ":id",
                "executions"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent Task",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"running\",\n    \"task_token\": \"task_token\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tool Route Update",
      "request": {
        "description": "Update an existing tool (overwrite existing values)",
        "url": {
          "raw": "{{baseUrl}}/tools/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tools",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"type\": \"function\",\n    \"background\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing tool (overwrite existing values)",
            "url": {
              "raw": "{{baseUrl}}/tools/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tools",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"function\",\n    \"background\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tool Route Delete",
      "request": {
        "description": "Delete an existing tool by id",
        "url": {
          "raw": "{{baseUrl}}/tools/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tools",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete an existing tool by id",
            "url": {
              "raw": "{{baseUrl}}/tools/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tools",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Tool Route Patch",
      "request": {
        "description": "Update an existing tool (merges with existing values)",
        "url": {
          "raw": "{{baseUrl}}/tools/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "tools",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing tool (merges with existing values)",
            "url": {
              "raw": "{{baseUrl}}/tools/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "tools",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route List",
      "request": {
        "description": "List users (paginated)",
        "url": {
          "raw": "{{baseUrl}}/users?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List users (paginated)",
            "url": {
              "raw": "{{baseUrl}}/users?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"id\": \"id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"updated_at\": \"2024-01-15T09:30:00Z\",\n            \"name\": \"name\",\n            \"about\": \"about\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Create",
      "request": {
        "description": "Create a new user",
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"docs\": []\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create a new user",
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\",\n    \"docs\": []\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded and a new resource has been created as a result.",
          "body": "{\n    \"id\": \"id\",\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Create Or Update",
      "request": {
        "description": "Create or update a user",
        "url": {
          "raw": "{{baseUrl}}/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"about\": \"about\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Create or update a user",
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"id\",\n    \"name\": \"name\",\n    \"about\": \"about\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Get",
      "request": {
        "description": "Get a user by id",
        "url": {
          "raw": "{{baseUrl}}/users/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Get a user by id",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"metadata\": {\n        \"metadata\": {\n            \"key\": \"value\"\n        }\n    },\n    \"created_at\": \"2024-01-15T09:30:00Z\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"name\": \"name\",\n    \"about\": \"about\"\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Update",
      "request": {
        "description": "Update an existing user by id (overwrite existing values)",
        "url": {
          "raw": "{{baseUrl}}/users/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PUT",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing user by id (overwrite existing values)",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"about\": \"about\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Delete",
      "request": {
        "description": "Delete a user by id",
        "url": {
          "raw": "{{baseUrl}}/users/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "DELETE",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Delete a user by id",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "description": "The request has been accepted for processing, but processing has not yet completed.",
          "body": "{\n    \"id\": \"id\",\n    \"deleted_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "Users Route Patch",
      "request": {
        "description": "Update an existing user by id (merge with existing values)",
        "url": {
          "raw": "{{baseUrl}}/users/:id",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id"
          ],
          "query": [],
          "variable": [
            {
              "key": "id",
              "description": "ID of the resource",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "PATCH",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "Update an existing user by id (merge with existing values)",
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of the resource",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"id\": \"id\",\n    \"updated_at\": \"2024-01-15T09:30:00Z\",\n    \"jobs\": [\n        \"jobs\"\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "User Docs Route List",
      "request": {
        "description": "List Docs owned by a User",
        "url": {
          "raw": "{{baseUrl}}/users/:id/docs?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id",
            "docs"
          ],
          "query": [
            {
              "key": "limit",
              "description": "Limit the number of items returned",
              "value": "1"
            },
            {
              "key": "offset",
              "description": "Offset the items returned",
              "value": "1"
            },
            {
              "key": "sort_by",
              "description": "Sort by a field",
              "value": "created_at"
            },
            {
              "key": "direction",
              "description": "Sort direction",
              "value": "asc"
            },
            {
              "key": "metadata_filter",
              "description": "JSON string of object that should be used to filter objects by metadata",
              "value": "metadata_filter"
            }
          ],
          "variable": [
            {
              "key": "id",
              "description": "ID of parent",
              "value": "id"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          },
          {
            "type": "text",
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "GET",
        "auth": null,
        "body": null
      },
      "response": [
        {
          "name": "Success",
          "status": "OK",
          "code": 200,
          "originalRequest": {
            "description": "List Docs owned by a User",
            "url": {
              "raw": "{{baseUrl}}/users/:id/docs?limit=1&offset=1&sort_by=created_at&direction=asc&metadata_filter=metadata_filter",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":id",
                "docs"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": "Limit the number of items returned",
                  "value": "1"
                },
                {
                  "key": "offset",
                  "description": "Offset the items returned",
                  "value": "1"
                },
                {
                  "key": "sort_by",
                  "description": "Sort by a field",
                  "value": "created_at"
                },
                {
                  "key": "direction",
                  "description": "Sort direction",
                  "value": "asc"
                },
                {
                  "key": "metadata_filter",
                  "description": "JSON string of object that should be used to filter objects by metadata",
                  "value": "metadata_filter"
                }
              ],
              "variable": [
                {
                  "key": "id",
                  "description": "ID of parent",
                  "value": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{apiKey}}",
                "type": "string",
                "description": null
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "description": "The request has succeeded.",
          "body": "{\n    \"results\": [\n        {\n            \"id\": \"id\",\n            \"created_at\": \"2024-01-15T09:30:00Z\",\n            \"title\": \"title\",\n            \"content\": \"content\"\n        }\n    ]\n}",
          "_postman_previewlanguage": "json"
        }
      ]
    },
    {
      "_type": "endpoint",
      "name": "User Docs Search Route Search",
      "request": {
        "description": "Search Docs owned by a User",
        "url": {
          "raw": "{{baseUrl}}/users/:id/search?limit=&offset=&sort_by=&direction=&metadata_filter=",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            ":id",
            "search"
          ],
          "query": [
            {
              "key": "limit",
              "value": "",
              "description": "Limit the number of items returned"
            },
            {
              "key": "offset",
              "value": "",
              "description": "Offset the items returned"
            },
            {
              "key": "sort_by",
              "value": "",
              "description": "Sort by a field"
            },
            {
              "key": "direction",
              "value": "",
              "description": "Sort direction"
            },
            {
              "key": "metadata_filter",
              "value": "",
              "description": "JSON string of object that should be used to filter objects by metadata"
            }
          ],
          "variable": [
            {
              "key": "id",
              "value": "",
              "description": "ID of the parent"
            }
          ]
        },
        "header": [
          {
            "key": "Authorization",
            "value": "{{apiKey}}",
            "type": "string",
            "description": null
          }
        ],
        "method": "POST",
        "auth": null,
        "body": {
          "mode": "raw",
          "raw": "{\n    \"body\": {\n        \"mode\": \"vector\",\n        \"vector\": [\n            0\n        ]\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": []
    }
  ]
}