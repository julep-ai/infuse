# generated by datamodel-codegen:
#   filename:  openapi-0.4.0.yaml

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field

from .Common import Uuid


class Execution(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    task_id: Annotated[Uuid, Field(json_schema_extra={"readOnly": True})]
    """
    The ID of the task that the execution is running
    """
    status: Annotated[Status, Field(json_schema_extra={"readOnly": True})]
    """
    The status of the execution
    """
    input: dict[str, Any]
    """
    The input to the execution
    """
    created_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was created as UTC date-time
    """
    updated_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was updated as UTC date-time
    """
    metadata: dict[str, Any] | None = None
    id: Annotated[Uuid, Field(json_schema_extra={"readOnly": True})]


class Status(str, Enum):
    """
    The status of the execution
    """

    queued = "queued"
    starting = "starting"
    running = "running"
    awaiting_input = "awaiting_input"
    succeeded = "succeeded"
    failed = "failed"
    cancelled = "cancelled"


class Transition(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    type: Annotated[Type, Field(json_schema_extra={"readOnly": True})]
    execution_id: Annotated[Uuid, Field(json_schema_extra={"readOnly": True})]
    outputs: Annotated[dict[str, Any], Field(json_schema_extra={"readOnly": True})]
    current: Annotated[list, Field(json_schema_extra={"readOnly": True})]
    next: Annotated[list | None, Field(json_schema_extra={"readOnly": True})]
    id: Annotated[Uuid, Field(json_schema_extra={"readOnly": True})]
    created_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was created as UTC date-time
    """
    updated_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was updated as UTC date-time
    """


class Type(str, Enum):
    finish = "finish"
    wait = "wait"
    error = "error"
    step = "step"
    cancelled = "cancelled"
