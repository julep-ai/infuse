# generated by datamodel-codegen:
#   filename:  openapi-0.4.0.yaml
#   timestamp: 2024-07-15T21:10:09+00:00

from __future__ import annotations

from typing import Annotated, Any, Dict, List
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, Field


class CreateOrUpdateUserRequest(BaseModel):
    id: UUID
    metadata: Dict[str, Any] | None = None
    name: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    Name of the user
    """
    about: str
    """
    About the user
    """


class CreateUserRequest(BaseModel):
    """
    Payload for creating a user (and associated documents)
    """

    metadata: Dict[str, Any] | None = None
    name: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    Name of the user
    """
    about: str
    """
    About the user
    """
    docs: Annotated[List, Field(max_length=100)]
    """
    Documents to index for this user. (Max: 100 items)
    """


class PatchUserRequest(BaseModel):
    """
    Payload for patching a user
    """

    metadata: Dict[str, Any] | None = None
    name: Annotated[
        str | None,
        Field(
            "",
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$",
        ),
    ]
    """
    Name of the user
    """
    about: str | None = ""
    """
    About the user
    """


class UpdateUserRequest(BaseModel):
    """
    Payload for updating a user
    """

    metadata: Dict[str, Any] | None = None
    name: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    Name of the user
    """
    about: str
    """
    About the user
    """


class User(BaseModel):
    id: Annotated[UUID, Field(json_schema_extra={"readOnly": True})]
    metadata: Dict[str, Any] | None = None
    created_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was created as UTC date-time
    """
    updated_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was updated as UTC date-time
    """
    name: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    Name of the user
    """
    about: str
    """
    About the user
    """
