# generated by datamodel-codegen:
#   filename:  openapi-0.4.0.yaml
#   timestamp: 2024-07-15T21:10:09+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, Field


class JobState(str, Enum):
    """
    Current state (one of: pending, in_progress, retrying, succeeded, aborted, failed)
    """

    pending = "pending"
    in_progress = "in_progress"
    retrying = "retrying"
    succeeded = "succeeded"
    aborted = "aborted"
    failed = "failed"
    unknown = "unknown"


class JobStatus(BaseModel):
    id: Annotated[UUID, Field(json_schema_extra={"readOnly": True})]
    created_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was created as UTC date-time
    """
    updated_at: Annotated[AwareDatetime, Field(json_schema_extra={"readOnly": True})]
    """
    When this resource was updated as UTC date-time
    """
    name: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    Name of the job
    """
    reason: str
    """
    Reason for the current state of the job
    """
    has_progress: bool
    """
    Whether this Job supports progress updates
    """
    progress: Annotated[float, Field(ge=0.0, le=100.0)]
    """
    Progress percentage
    """
    state: JobState
    """
    Current state of the job
    """
