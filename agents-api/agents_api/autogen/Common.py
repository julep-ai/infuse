# generated by datamodel-codegen:
#   filename:  openapi-0.4.0.yaml

from __future__ import annotations

from typing import Annotated
from uuid import UUID

from pydantic import ConfigDict, Field, RootModel


class IdentifierSafeUnicode(RootModel[str]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: Annotated[
        str,
        Field(
            pattern="^[\\p{L}\\p{Nl}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]+[\\p{ID_Start}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\p{Pattern_Syntax}\\p{Pattern_White_Space}]*$"
        ),
    ]
    """
    For Unicode character safety
    See: https://unicode.org/reports/tr31/
    See: https://www.unicode.org/reports/tr39/#Identifier_Characters
    """


class Uuid(RootModel[UUID]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: UUID


class ValidPythonIdentifier(RootModel[str]):
    model_config = ConfigDict(
        populate_by_name=True,
    )
    root: Annotated[str, Field(pattern="^[^\\W0-9]\\w*$")]
    """
    Valid python identifier names
    """
