[tool.poetry]
name = "agents-api"
version = "0.1.0"
description = ""
authors = ["Julep Developers <developers@julep.ai>"]
readme = "README.md"
packages = [{include = "agents_api"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
fastapi = "^0.103.1"
pycozo = {extras = ["embedded"], version = "^0.7.6"}
uvicorn = "^0.23.2"
fire = "^0.5.0"
environs = "^10.3.0"
google-cloud-aiplatform = "^1.33.0"
pandas = "^2.1.0"
openai = "^1.12.0"
httpx = "^0.26.0"
async-lru = "^2.0.4"
sentry-sdk = {extras = ["fastapi"], version = "^1.38.0"}
ward = "^0.68.0b0"
temporalio = "^1.4.0"
pydantic = "^2.5.3"


[tool.poetry.group.dev.dependencies]
ipython = "^8.18.1"
black = "^23.12.1"
ruff = "^0.1.9"
datamodel-code-generator = "^0.25.3"
cozo-migrate = "^0.2.0"
poethepoet = "^0.24.4"
pytype = "^2024.1.5"
julep = "^0.2.4"
pyjwt = "^2.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
format = "black ."
lint = "ruff **/*.py --fix --unsafe-fixes"
typecheck = "pytype agents_api"
check = [
    "format",
    "lint",
    "typecheck",
]
test = "ward"
codegen = "datamodel-codegen --input ../openapi.yaml --input-file-type openapi --output agents_api/autogen/openapi_model.py --use-operation-id-as-name --use-double-quotes --use-schema-description --target-python-version 3.10 --reuse-model --collapse-root-models --use-field-description --field-include-all-keys --use-unique-items-as-set --use-subclass-enum --use-union-operator --use-one-literal-as-default --use-annotated --enum-field-as-literal one --output-model-type pydantic_v2.BaseModel"