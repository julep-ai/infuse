name: pgai
services:
  memory-store:
    image: timescale/timescaledb-ha:pg17

    # For timescaledb specific options,
    # See: https://github.com/timescale/timescaledb-docker?tab=readme-ov-file#notes-on-timescaledb-tune
    environment:
      - POSTGRES_PASSWORD=${MEMORY_STORE_PASSWORD:-postgres}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    ports:
      - "5432:5432"
    volumes:
      - memory_store_data:/home/postgres/pgdata/data

    # TODO: Fix this to install pgaudit
    # entrypoint: []
    # command: >-
    #   sed -r -i "s/[#]*\s*(shared_preload_libraries)\s*=\s*'(.*)'/\1 = 'pgaudit,\2'/;s/,'/'/" /home/postgres/pgdata/data/postgresql.conf
    #   && exec /docker-entrypoint.sh

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:v0.3.0
    environment:
      - PGAI_VECTORIZER_WORKER_DB_URL=postgres://postgres:${MEMORY_STORE_PASSWORD:-postgres}@memory-store:5432/postgres
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    command: [ "--poll-interval", "5s" ]
    depends_on:
      memory-store:
        condition: service_healthy

  migration:
    image: migrate/migrate:latest
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://postgres:${MEMORY_STORE_PASSWORD:-postgres}@memory-store:5432/postgres?sslmode=disable" , "up"]
    
    restart: "no"
    develop:
      watch:
        - path: ./migrations
          target: ./migrations
          action: sync+restart
    depends_on:
      memory-store:
        condition: service_healthy

volumes:
  memory_store_data:
    external: true
