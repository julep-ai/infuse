{#-
  Convention: all delimiters should use double '-' so they eat whitespace on both sides.
  Whitespace must be added explicitly when needed.
-#}

{#- Globals -#}
{#- ------- -#}

{%- set newline_unless_first = joiner('\n') -%}
{%- set allowed_roles = [
  'system',
  'user',
  'assistant',
  'function_call'
] -%}

{%- set allowed_system_names = [
  'situation',
  'thought',
  'information',
  'functions',
  'instruction',
] -%}

{%- set add_generation_prompt =
  add_generation_prompt | default(False)
-%}

{%- set escape_tokens = (
    [bos_token, eos_token, unk_token, pad_token] + additional_special_tokens
  ) | map('default', '<unk>') | list
-%}

{%- set input_messages_roles =
  messages | map(attribute='role') | list
-%}

{%- set idx_first_assistant =
  input_messages_roles.index('assistant')
  if 'assistant' in input_messages_roles
  else -1
-%}

{%- if not messages -%}
  {{ raise_exception('No messages') if 'raise_exception' is filter else 1 / 0 }}
{%- endif -%}

{%- set ns = namespace(messages=messages) -%}

{%- set first_message = ns.messages[0] -%}
{%- set has_situation =
  first_message.role == 'system'
  and first_message.name == 'situation'
  or not first_message.name
-%}

{%- set default_situation = {
  'role': 'system',
  'name': 'situation',
  'content': 'You are a helpful AI Assistant.'
} -%}

{%- if not has_situation -%}
  {%- set ns.messages = [default_situation] + ns.messages -%}
{%- endif -%}

{#- Validation -#}
{#- ---------- -#}

{%- for message in ns.messages -%}
  {%- set role = message.role | lower -%}
  {%- set name = message.name | default('situation' if role == 'system' else '') -%}
  {%- set is_situation = role == 'system' and name == 'situation' -%}

  {#- Validate role -#}
  {%- if role not in allowed_roles -%}
    {{ raise_exception('Invalid role: ' + role) if 'raise_exception' is filter else 1 / 0 }}
  {%- endif -%}

  {#- Validate system name -#}
  {%- if role == 'system' and name not in allowed_system_names -%}
    {{ raise_exception('Invalid name for role=system: ' + name) if 'raise_exception' is filter else 1 / 0 }}
  {%- endif -%}

  {#- Validate situation tag can only be in first message -#}
  {%- if not loop.first and is_situation -%}
    {{ raise_exception('Situation can only appear as the very first message') if 'raise_exception' is filter else 1 / 0 }}
  {%- endif -%}

  {#- Validate continue=True only in last message -#}
  {%- if not loop.last and message.continue -%}
    {{ raise_exception('continue=True can only appear in the last message') if 'raise_exception' is filter else 1 / 0 }}
  {%- endif -%}

{%- endfor -%}

{#- Render -#}
{#- ------ -#}

{#- 
  Add bos token in the beginning;
  as tokenizer.apply_chat_template does not do that automatically.
  https://github.com/huggingface/transformers/blob/main/src/transformers/tokenization_utils_base.py#L1753
-#}
{{ bos_token }}

{%- for message in ns.messages -%}
  {%- set role = message.role | lower -%}
  {%- set name = message.name | default('situation' if role == 'system' else '') -%}

  {#- Process content -#}
  {%- set content_ns = namespace(value=message.content) -%}

  {#- Convert functions to json if needed -#}
  {%- if role == 'system' and name == 'functions' and content is not string -%}
    {%- set content_ns.value =
      'Available functions:\n\n'
      + (content_ns.value | map('tojson', indent=4) | join('\n'))
    -%}
  {%- endif -%}

  {#- Escape content -#}
  {%- for escape_token in escape_tokens -%}
    {#- Replace '<|im_start|>' with '< |im_start|>' and so on -#}
    {%- set content_ns.value = content_ns.value | replace(
        escape_token,
        escape_token.replace(escape_token[0], escape_token[0]+' ', 1)
    ) -%}
  {%- endfor -%}

  {#- Strip trailing single space -#}
  {%- if (content_ns.value | length) > 1
      and content_ns.value[-1] == ' '
      and content_ns.value[-2] != ' '
  -%}
    {%- set content_ns.value = content_ns.value[:-1] -%}
  {%- endif -%}

{{ newline_unless_first() }}<|im_start|>
  {%- if role == 'system' -%}{{ name }}
  {%- elif role == 'user' -%}person{{ ' (' + name + ')' if name else '' }}
  {%- elif role == 'assistant' -%}me
    {#- Only add name for assistant in the very first example -#}
    {%- if name and loop.index0 == idx_first_assistant -%}{{ ' (' + name + ')' }}{%- endif -%}
  {%- elif role == 'function_call' -%}function_call
  {%- endif -%}

{{ '\n' + content_ns.value }}

  {%- if not loop.last -%}
<|im_end|>
  {%- elif not message.continue -%}
<|im_end|>
    {%- if add_generation_prompt -%}
{{ '\n<|im_start|>' }}
    {%- endif -%}
  {%- endif -%}

{%- endfor -%}
